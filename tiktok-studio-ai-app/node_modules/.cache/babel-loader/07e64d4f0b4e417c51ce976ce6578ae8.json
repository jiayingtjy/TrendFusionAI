{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JiaYi\\\\Documents\\\\GitHub\\\\trendfusion-ai-webapp\\\\TrendFusionAI\\\\tiktok-studio-ai-app\\\\src\\\\components\\\\TrendFusionAI.js\";\nimport React, { useState } from 'react';\nimport RecommendationForm from './RecommendationForm';\nimport PersonaAnalysis from './PersonaAnalysis';\nimport TrendAnalysis from './TrendAnalysis';\nimport GeneratedRecommendations from './GeneratedRecommendations';\nimport '../styles/TrendFusionAI.css';\nfunction TrendFusionAI() {\n  const [persona, setPersona] = useState('');\n  const [trend, setTrend] = useState('');\n  const [objective, setObjective] = useState('');\n  const [recommendation, setRecommendation] = useState(null);\n  const fetchPersonaData = async () => {\n    // Placeholder function to fetch user persona data\n    return \"Detailed persona analysis based on user profile and activity data.\";\n  };\n  const fetchTrendData = async () => {\n    // Placeholder function to fetch the hottest trends\n    return \"Detailed trend analysis based on the highest like, share, view, and comment counts.\";\n  };\n  const generateRecommendation = (objective, persona, trend) => {\n    // Placeholder function to generate recommendations\n    return {\n      videoIdea: \"Create a video showcasing the top features of your product.\",\n      videoDescription: \"Highlight the unique selling points and benefits of your product.\",\n      videoContent: [{\n        timeFrame: \"First 10 seconds\",\n        script: \"Introduce the product\",\n        action: \"Show the product\"\n      }, {\n        timeFrame: \"Next 10 seconds\",\n        script: \"Explain the features\",\n        action: \"Demonstrate the features\"\n      }, {\n        timeFrame: \"Final 10 seconds\",\n        script: \"Call to action\",\n        action: \"Encourage viewers to purchase\"\n      }]\n    };\n  };\n  const handleGenerateRecommendations = async objectiveInput => {\n    setObjective(objectiveInput);\n    const personaData = await fetchPersonaData();\n    setPersona(personaData);\n    const trendData = await fetchTrendData();\n    setTrend(trendData);\n    const recommendationData = generateRecommendation(objectiveInput, personaData, trendData);\n    setRecommendation(recommendationData);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trend-fusion-ai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Trend Fusion AI\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Don't know what content to post?\"), /*#__PURE__*/React.createElement(RecommendationForm, {\n    onGenerateRecommendations: handleGenerateRecommendations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), persona && /*#__PURE__*/React.createElement(PersonaAnalysis, {\n    persona: persona,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }), trend && /*#__PURE__*/React.createElement(TrendAnalysis, {\n    trend: trend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), recommendation && /*#__PURE__*/React.createElement(GeneratedRecommendations, {\n    objective: objective,\n    recommendation: recommendation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n}\nexport default TrendFusionAI;","map":{"version":3,"names":["React","useState","RecommendationForm","PersonaAnalysis","TrendAnalysis","GeneratedRecommendations","TrendFusionAI","persona","setPersona","trend","setTrend","objective","setObjective","recommendation","setRecommendation","fetchPersonaData","fetchTrendData","generateRecommendation","videoIdea","videoDescription","videoContent","timeFrame","script","action","handleGenerateRecommendations","objectiveInput","personaData","trendData","recommendationData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onGenerateRecommendations"],"sources":["C:/Users/JiaYi/Documents/GitHub/trendfusion-ai-webapp/TrendFusionAI/tiktok-studio-ai-app/src/components/TrendFusionAI.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RecommendationForm from './RecommendationForm';\r\nimport PersonaAnalysis from './PersonaAnalysis';\r\nimport TrendAnalysis from './TrendAnalysis';\r\nimport GeneratedRecommendations from './GeneratedRecommendations';\r\nimport '../styles/TrendFusionAI.css';\r\n\r\nfunction TrendFusionAI() {\r\n  const [persona, setPersona] = useState('');\r\n  const [trend, setTrend] = useState('');\r\n  const [objective, setObjective] = useState('');\r\n  const [recommendation, setRecommendation] = useState(null);\r\n\r\n  const fetchPersonaData = async () => {\r\n    // Placeholder function to fetch user persona data\r\n    return \"Detailed persona analysis based on user profile and activity data.\";\r\n  };\r\n\r\n  const fetchTrendData = async () => {\r\n    // Placeholder function to fetch the hottest trends\r\n    return \"Detailed trend analysis based on the highest like, share, view, and comment counts.\";\r\n  };\r\n\r\n  const generateRecommendation = (objective, persona, trend) => {\r\n    // Placeholder function to generate recommendations\r\n    return {\r\n      videoIdea: \"Create a video showcasing the top features of your product.\",\r\n      videoDescription: \"Highlight the unique selling points and benefits of your product.\",\r\n      videoContent: [\r\n        { timeFrame: \"First 10 seconds\", script: \"Introduce the product\", action: \"Show the product\" },\r\n        { timeFrame: \"Next 10 seconds\", script: \"Explain the features\", action: \"Demonstrate the features\" },\r\n        { timeFrame: \"Final 10 seconds\", script: \"Call to action\", action: \"Encourage viewers to purchase\" },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const handleGenerateRecommendations = async (objectiveInput) => {\r\n    setObjective(objectiveInput);\r\n    const personaData = await fetchPersonaData();\r\n    setPersona(personaData);\r\n    const trendData = await fetchTrendData();\r\n    setTrend(trendData);\r\n    const recommendationData = generateRecommendation(objectiveInput, personaData, trendData);\r\n    setRecommendation(recommendationData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"trend-fusion-ai\">\r\n      <h1>Trend Fusion AI</h1>\r\n      <p>Don't know what content to post?</p>\r\n      <RecommendationForm onGenerateRecommendations={handleGenerateRecommendations} />\r\n      {persona && <PersonaAnalysis persona={persona} />}\r\n      {trend && <TrendAnalysis trend={trend} />}\r\n      {recommendation && (\r\n        <GeneratedRecommendations\r\n          objective={objective}\r\n          recommendation={recommendation}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrendFusionAI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}