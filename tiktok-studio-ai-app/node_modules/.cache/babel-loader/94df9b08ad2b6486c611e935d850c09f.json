{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JiaYi\\\\Documents\\\\GitHub\\\\trendfusion-ai-webapp\\\\TrendFusionAI\\\\tiktok-studio-ai-app\\\\src\\\\components\\\\OpenAITest.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction OpenAITest() {\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState('');\n  const persona = {\n    username: 'exampleUser',\n    follower_count: 10000,\n    following_count: 300,\n    likes_count: 50000,\n    video_count: 200\n  };\n  const trend = {\n    hashtag: 'DanceChallenge',\n    idea: 'Participate in the latest dance challenge to engage your audience.',\n    possible_like_count: '1 million',\n    possible_view_count: '5 million'\n  };\n  const objective = 'Promote a new product launch';\n  const generatePrompt = (persona, trend, objective) => {\n    return `\n    Based on the following information, generate content recommendations for a TikTok video.\n\n    1. **Persona Data**:\n       - Username: ${persona.username}\n       - Follower Count: ${persona.follower_count}\n       - Following Count: ${persona.following_count}\n       - Total Likes: ${persona.likes_count}\n       - Total Videos: ${persona.video_count}\n\n    2. **Hottest Trend Analysis**:\n       - Top Trend: #${trend.hashtag}\n       - Trend Idea: ${trend.idea}\n       - Possible Like Count: ${trend.possible_like_count}\n       - Possible View Count: ${trend.possible_view_count}\n\n    3. **Objective**:\n       - ${objective}\n\n    Provide the following recommendations:\n    1. Video Idea\n    2. Video Description\n    3. Video Content (including timestamp, script, action)\n    `;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const prompt = generatePrompt(persona, trend, objective);\n    setPrompt(prompt);\n    try {\n      const res = await axios.post('/api/openai', {\n        prompt\n      });\n      setResponse(res.data.choices[0].text);\n      setError('');\n    } catch (error) {\n      console.error(error);\n      setResponse('');\n      setError(error.response ? error.response.data : 'Error communicating with OpenAI API');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"OpenAI Test\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Generate Recommendations\")), prompt && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Prompt\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, prompt)), response && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Response\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, response)), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Error\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, error)));\n}\nexport default OpenAITest;","map":{"version":3,"names":["React","useState","axios","OpenAITest","prompt","setPrompt","response","setResponse","error","setError","persona","username","follower_count","following_count","likes_count","video_count","trend","hashtag","idea","possible_like_count","possible_view_count","objective","generatePrompt","handleSubmit","event","preventDefault","res","post","data","choices","text","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type"],"sources":["C:/Users/JiaYi/Documents/GitHub/trendfusion-ai-webapp/TrendFusionAI/tiktok-studio-ai-app/src/components/OpenAITest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction OpenAITest() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const persona = {\r\n    username: 'exampleUser',\r\n    follower_count: 10000,\r\n    following_count: 300,\r\n    likes_count: 50000,\r\n    video_count: 200\r\n  };\r\n\r\n  const trend = {\r\n    hashtag: 'DanceChallenge',\r\n    idea: 'Participate in the latest dance challenge to engage your audience.',\r\n    possible_like_count: '1 million',\r\n    possible_view_count: '5 million'\r\n  };\r\n\r\n  const objective = 'Promote a new product launch';\r\n\r\n  const generatePrompt = (persona, trend, objective) => {\r\n    return `\r\n    Based on the following information, generate content recommendations for a TikTok video.\r\n\r\n    1. **Persona Data**:\r\n       - Username: ${persona.username}\r\n       - Follower Count: ${persona.follower_count}\r\n       - Following Count: ${persona.following_count}\r\n       - Total Likes: ${persona.likes_count}\r\n       - Total Videos: ${persona.video_count}\r\n\r\n    2. **Hottest Trend Analysis**:\r\n       - Top Trend: #${trend.hashtag}\r\n       - Trend Idea: ${trend.idea}\r\n       - Possible Like Count: ${trend.possible_like_count}\r\n       - Possible View Count: ${trend.possible_view_count}\r\n\r\n    3. **Objective**:\r\n       - ${objective}\r\n\r\n    Provide the following recommendations:\r\n    1. Video Idea\r\n    2. Video Description\r\n    3. Video Content (including timestamp, script, action)\r\n    `;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const prompt = generatePrompt(persona, trend, objective);\r\n    setPrompt(prompt);\r\n\r\n    try {\r\n      const res = await axios.post('/api/openai', { prompt });\r\n      setResponse(res.data.choices[0].text);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error(error);\r\n      setResponse('');\r\n      setError(error.response ? error.response.data : 'Error communicating with OpenAI API');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>OpenAI Test</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <button type=\"submit\">Generate Recommendations</button>\r\n      </form>\r\n      {prompt && (\r\n        <div>\r\n          <h3>Prompt</h3>\r\n          <pre>{prompt}</pre>\r\n        </div>\r\n      )}\r\n      {response && (\r\n        <div>\r\n          <h3>Response</h3>\r\n          <p>{response}</p>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div>\r\n          <h3>Error</h3>\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OpenAITest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}